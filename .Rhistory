P2<- P2+geom_point(size=3, colour="blue", alpha=.8)
P2<- P2+xlab("zipcode")+ylab("purchase price")
P2<- P2+ggtitle("Mean Purchase Price versus Zipcode")
P2<- P2+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
P2
require(plyr)   ##require plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,"pickup_zipcode",
summarise,
less_than_60=length(purchase_price[purchase_price<=60]),  ##select purchase price
btw_60_and_120=length(purchase_price[purchase_price>60 & purchase_price<=120]),
above_120=length(purchase_price[purchase_price > 120]))
purchase_stats_mgt
require(plyr)   #require plyr
##use plyr to pull data into zipcode bundled stats
##some summary stats
purchase_stats<-ddply(delivery_data,~pickup_zipcode,
summarise,
mean_price=mean(purchase_price), ##calculate mean
median_price=median(purchase_price),
max_price=max(purchase_price))
##filter for complete cases
purchase_stats<-purchase_stats[!is.na(purchase_stats$pickup_zipcode),]
##plot
P2<- ggplot(purchase_stats, aes(x=factor(pickup_zipcode), y=median_price))
P2<- P2+geom_point(size=3, colour="blue", alpha=.8)
P2<- P2+geom_point(data=mean_price, alpha=0.8)
P2<- P2+xlab("zipcode")+ylab("purchase price")
P2<- P2+ggtitle("Median Purchase Price versus Zipcode")
P2<- P2+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
P2
require(plyr)   #require plyr
##use plyr to pull data into zipcode bundled stats
##some summary stats
purchase_stats<-ddply(delivery_data,~pickup_zipcode,
summarise,
mean_price=mean(purchase_price), ##calculate mean
median_price=median(purchase_price),
max_price=max(purchase_price))
##filter for complete cases
purchase_stats<-purchase_stats[!is.na(purchase_stats$pickup_zipcode),]
##plot
P2<- ggplot(purchase_stats, aes(x=factor(pickup_zipcode), y=median_price))
P2<- P2+geom_point(size=3, colour="blue", alpha=.8)
P2<- P2+geom_point(aes(y=mean_price), alpha=0.8)
P2<- P2+xlab("zipcode")+ylab("purchase price")
P2<- P2+ggtitle("Median Purchase Price versus Zipcode")
P2<- P2+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
P2
require(plyr)   #require plyr
##use plyr to pull data into zipcode bundled stats
##some summary stats
purchase_stats<-ddply(delivery_data,~pickup_zipcode,
summarise,
mean_price=mean(purchase_price), ##calculate mean
median_price=median(purchase_price),
max_price=max(purchase_price))
##filter for complete cases
purchase_stats<-purchase_stats[!is.na(purchase_stats$pickup_zipcode),]
##plot
P2<- ggplot(purchase_stats, aes(x=factor(pickup_zipcode), y=median_price))
P2<- P2+geom_point(size=3, colour="blue", alpha=.8)
P2<- P2+geom_point(aes(y=mean_price), alpha=0.6, size=3)
P2<- P2+xlab("zipcode")+ylab("purchase price")
P2<- P2+ggtitle("Median Purchase Price versus Zipcode")
P2<- P2+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
P2
require(plyr)   #require plyr
##use plyr to pull data into zipcode bundled stats
##some summary stats
purchase_stats<-ddply(delivery_data,~pickup_zipcode,
summarise,
mean_price=mean(purchase_price), ##calculate mean
median_price=median(purchase_price),
max_price=max(purchase_price))
##filter for complete cases
purchase_stats<-purchase_stats[!is.na(purchase_stats$pickup_zipcode),]
##plot
P2<- ggplot(purchase_stats, aes(x=factor(pickup_zipcode), y=median_price))
P2<- P2+geom_point(size=3, colour="blue", alpha=.8)
P2<- P2+geom_point(aes(y=mean_price), alpha=0.5, size=3)
P2<- P2+xlab("zipcode")+ylab("purchase price")
P2<- P2+ggtitle("Median Purchase Price versus Zipcode")
P2<- P2+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
P2
require(plyr)   #require plyr
##use plyr to pull data into zipcode bundled stats
##some summary stats
purchase_stats<-ddply(delivery_data,~pickup_zipcode,
summarise,
mean_price=mean(purchase_price), ##calculate mean
median_price=median(purchase_price),
max_price=max(purchase_price))
##filter for complete cases
purchase_stats<-purchase_stats[!is.na(purchase_stats$pickup_zipcode),]
##plot
P2<- ggplot(purchase_stats, aes(x=factor(pickup_zipcode), y=median_price))
P2<- P2+geom_point(size=3, colour="blue", alpha=.8)
P2<- P2+geom_point(aes(y=mean_price), alpha=0.5, size=3, shape=2)
P2<- P2+xlab("zipcode")+ylab("purchase price")
P2<- P2+ggtitle("Median Purchase Price versus Zipcode")
P2<- P2+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
P2
require(plyr)   #require plyr
##use plyr to pull data into zipcode bundled stats
##some summary stats
purchase_stats<-ddply(delivery_data,~pickup_zipcode,
summarise,
mean_price=mean(purchase_price), ##calculate mean
median_price=median(purchase_price),
max_price=max(purchase_price))
##filter for complete cases
purchase_stats<-purchase_stats[!is.na(purchase_stats$pickup_zipcode),]
##plot
P2<- ggplot(purchase_stats, aes(x=factor(pickup_zipcode), y=median_price))
P2<- P2+geom_point(size=3.5, colour="blue", alpha=.8)
P2<- P2+geom_point(aes(y=mean_price), alpha=0.5, size=3, shape=2)
P2<- P2+xlab("zipcode")+ylab("purchase price")
P2<- P2+ggtitle("Median and Mean Purchase Prices versus Zipcode")
P2<- P2+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
P2
dim(delivery_data)
delivery_data2<-delivery_data[delivery_data$zip_code %in% deliv_sorted$zip_code,]
dim(delivery_data2)
table(delivery_data$zipcode)
table(delivery_data$zip_code)
str(delivery_data)
dim(delivery_data)
delivery_data2<-delivery_data[delivery_data$pickup_zipcode %in% deliv_sorted$pickup_zipcode,]
dim(delivery_data2)
table(delivery_data$pickup_zipcode)
table(deliv_sorted$pickup_zipcode)
delivery_data<-read.csv("delivery_data.csv")
##clean data
##data frame it
delivery_data<-as.data.frame(delivery_data)
#eliminate NA zipcodes
delivery_data<-delivery_data[!is.na(delivery_data$pickup_zipcode),]
##ensure pruchase prices are finite
delivery_data<-delivery_data[!is.na(delivery_data$purchase_price),]
delivery_data<-delivery_data[delivery_data$purchase_price>0,]
str(delivery_data) ##take a look at the structure
head(delivery_data[,c(1:2,5)])  ##look at the headers of just a few columns
require(xtable)
require(ggplot2)
#find frequencies
deliveries <- as.data.frame(table(delivery_data$pickup_zipcode))
#rename columns descriptively
colnames(deliveries)<-c("pickup_zipcode", "freq")
deliveries$pickup_zipcode <- as.character(deliveries$pickup_zipcode)
##plot the data
P1 <- ggplot(deliveries, aes(x=factor(pickup_zipcode), y=freq))
P1<- P1+geom_point(size=3, colour="blue", alpha=.8)  ##point aesthetics
P1<- P1+xlab("zipcode")+ylab("deliveries")+ggtitle("Deliveries versus Zipcode")
P1<- P1+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
print(P1)
##create table output of top zip codes
##sort data by deliveries
deliv_sorted<-deliveries[with(deliveries, order(-freq)),]       ##sort by order frequency
colnames(deliv_sorted)<-c("pickup_zipcode", "number_deliveries")  ##add descriptive col names
print(deliv_sorted, row.names=FALSE)
deliv_sorted<-deliv_sorted[deliv_sorted$number_deliveries>200,]
deliv_sorted
deliv_sorted2<-deliv_sorted[deliv_sorted$number_deliveries>200,]
deliv_sorted
deliv_sorted2<-deliv_sorted[deliv_sorted$number_deliveries>200,]
deliv_sorted2
deliv_sorted2<-deliv_sorted[deliv_sorted$number_deliveries>200,]
print(deliv_sorted2, row.names=FALSE)
table(delivery_data$pickup_zipcode)
table(deliv_sorted2)
deliv_sorted2<-deliv_sorted[deliv_sorted$number_deliveries>200,]
deliv_sorted2<-as.matrix(deliv_sorted2)
print(deliv_sorted2, row.names=FALSE)
table(deliv_sorted2)
deliv_sorted2<-deliv_sorted[deliv_sorted$number_deliveries>200,]
deliv_sorted2<-as.matrix(deliv_sorted2)
print(deliv_sorted2, row.names=FALSE)
table(deliv_sorted2)
deliv_sorted2<-deliv_sorted[deliv_sorted$number_deliveries>200,]
deliv_sorted2<-as.dataframe(as.matrix(deliv_sorted2))
print(deliv_sorted2, row.names=FALSE)
table(deliv_sorted2)
deliv_sorted2<-deliv_sorted[deliv_sorted$number_deliveries>200,]
deliv_sorted2<-as.dataframe(deliv_sorted2)
print(deliv_sorted2, row.names=FALSE)
table(deliv_sorted2)
deliv_sorted2<-deliv_sorted[deliv_sorted$number_deliveries>200,]
str(deliv_sorted2)
deliv_sorted2<-as.dataframe(deliv_sorted2)
print(deliv_sorted2, row.names=FALSE)
table(deliv_sorted2)
deliv_sorted2<-deliv_sorted[deliv_sorted$number_deliveries>200,]
str(delivery_data)
str(deliv_sorted2)
deliv_sorted2<-as.dataframe(deliv_sorted2)
print(deliv_sorted2, row.names=FALSE)
table(deliv_sorted2)
deliv_sorted2<-deliv_sorted[deliv_sorted$number_deliveries>200,]
str(delivery_data)
str(deliv_sorted2)
deliv_sorted2<-as.matrix(deliv_sorted2)
str(deliv_sorted)
print(deliv_sorted2, row.names=FALSE)
table(deliv_sorted2)
deliv_sorted2<-deliv_sorted[deliv_sorted$number_deliveries>200,]
str(delivery_data)
str(deliv_sorted2)
deliv_sorted2<-as.matrix(deliv_sorted2)
str(deliv_sorted2)
print(deliv_sorted2, row.names=FALSE)
table(deliv_sorted2)
deliv_sorted2<-deliv_sorted[deliv_sorted$number_deliveries>200,]
deliv_sorted2<-as.integer(deliv_sorted2)
str(deliv_sorted2)
print(deliv_sorted2, row.names=FALSE)
table(deliv_sorted2)
##create table output of top zip codes
##sort data by deliveries
deliv_sorted<-as.num(deliveries[with(deliveries, order(-freq)),] )      ##sort by order frequency
colnames(deliv_sorted)<-c("pickup_zipcode", "number_deliveries")  ##add descriptive col names
print(deliv_sorted, row.names=FALSE)
##create table output of top zip codes
##sort data by deliveries
deliv_sorted<-as.numeric(deliveries[with(deliveries, order(-freq)),] )      ##sort by order frequency
colnames(deliv_sorted)<-c("pickup_zipcode", "number_deliveries")  ##add descriptive col names
print(deliv_sorted, row.names=FALSE)
##create table output of top zip codes
##sort data by deliveries
deliv_sorted<-deliveries[with(deliveries, order(-freq)),]       ##sort by order frequency
deliv_sorted<-cbind(as.integer(deliv_sorted$pickup_zipcode), as.integer(deliv_sorted$freq))
colnames(deliv_sorted)<-c("pickup_zipcode", "number_deliveries")  ##add descriptive col names
print(deliv_sorted, row.names=FALSE)
str(deliv_sorted)
head(deliv_sorted)
str(deliv_sorted$pickup_zipcode)
str(deliv_sorted$number_deliveries)
##create table output of top zip codes
##sort data by deliveries
deliv_sorted<-deliveries[with(deliveries, order(-freq)),]       ##sort by order frequency
deliv_sorted<-cbind(as.integer(deliv_sorted$pickup_zipcode), as.integer(deliv_sorted$freq))
colnames(deliv_sorted)<-c("pickup_zipcode", "number_deliveries")  ##add descriptive col names
print(deliv_sorted, row.names=FALSE)
##create table output of top zip codes
##sort data by deliveries
deliv_sorted<-deliveries[with(deliveries, order(-freq)),]       ##sort by order frequency
deliv_sorted<-cbind(as.integer(deliv_sorted$pickup_zipcode), as.integer(deliv_sorted$freq))
colnames(deliv_sorted)<-c("pickup_zipcode", "number_deliveries")  ##add descriptive col names
print(as.matrix(deliv_sorted), row.names=FALSE)
##create table output of top zip codes
##sort data by deliveries
deliv_sorted<-deliveries[with(deliveries, order(-freq)),]       ##sort by order frequency
deliv_sorted<-cbind(as.integer(deliv_sorted$pickup_zipcode), as.integer(deliv_sorted$freq))
colnames(deliv_sorted)<-c("pickup_zipcode", "number_deliveries")  ##add descriptive col names
print(as.dataframe(deliv_sorted), row.names=FALSE)
##create table output of top zip codes
##sort data by deliveries
deliv_sorted<-deliveries[with(deliveries, order(-freq)),]       ##sort by order frequency
deliv_sorted<-cbind(as.integer(deliv_sorted$pickup_zipcode), as.integer(deliv_sorted$freq))
colnames(deliv_sorted)<-c("pickup_zipcode", "number_deliveries")  ##add descriptive col names
print(as.data.frame(deliv_sorted), row.names=FALSE)
##create table output of top zip codes
##sort data by deliveries
deliv_sorted<-deliveries[with(deliveries, order(-freq)),]       ##sort by order frequency
deliv_sorted<-cbind(as.integer(deliv_sorted$pickup_zipcode), as.integer(deliv_sorted$freq))
colnames(deliv_sorted)<-c("pickup_zipcode", "number_deliveries")  ##add descriptive col names
deliv_sorted<-as.data.frame(deliv_sorted)
print(deliv_sorted, row.names=FALSE)
deliv_sorted2<-deliv_sorted[deliv_sorted$number_deliveries>200,]
deliv_sorted2<-as.integer(deliv_sorted2)
str(deliv_sorted2)
print(deliv_sorted2, row.names=FALSE)
table(deliv_sorted2)
dim(delivery_data)
delivery_data2<-delivery_data[delivery_data$pickup_zipcode %in% deliv_sorted2$pickup_zipcode,]
dim(delivery_data2)
require(xtable)
require(ggplot2)
#find frequencies
deliveries <- as.data.frame(table(delivery_data$pickup_zipcode))
#rename columns descriptively
#colnames(deliveries)<-c("pickup_zipcode", "freq")
deliveries$pickup_zipcode <- as.character(deliveries$pickup_zipcode)
##plot the data
P1 <- ggplot(deliveries, aes(x=factor(pickup_zipcode), y=freq))
P1<- P1+geom_point(size=3, colour="blue", alpha=.8)  ##point aesthetics
P1<- P1+xlab("zipcode")+ylab("deliveries")+ggtitle("Deliveries versus Zipcode")
P1<- P1+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
print(P1)
require(xtable)
require(ggplot2)
#find frequencies
deliveries <- as.data.frame(table(delivery_data$pickup_zipcode))
#rename columns descriptively
colnames(deliveries)<-c("pickup_zipcode", "freq")
#deliveries$pickup_zipcode <- as.character(deliveries$pickup_zipcode)
##plot the data
P1 <- ggplot(deliveries, aes(x=factor(pickup_zipcode), y=freq))
P1<- P1+geom_point(size=3, colour="blue", alpha=.8)  ##point aesthetics
P1<- P1+xlab("zipcode")+ylab("deliveries")+ggtitle("Deliveries versus Zipcode")
P1<- P1+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
print(P1)
require(plyr)   #require plyr
##use plyr to pull data into zipcode bundled stats
##some summary stats
purchase_stats<-ddply(delivery_data,~pickup_zipcode,
summarise,
mean_price=mean(purchase_price), ##calculate mean
median_price=median(purchase_price),
max_price=max(purchase_price))
##filter for complete cases
purchase_stats<-purchase_stats[!is.na(purchase_stats$pickup_zipcode),]
##plot
P2<- ggplot(purchase_stats, aes(x=factor(pickup_zipcode), y=c(median_price, mean_price)))
P2<- P2+geom_point(size=3.5, colour="blue", alpha=.8)
#P2<- P2+geom_point(aes(y=mean_price), alpha=0.5, size=3, shape=2)
P2<- P2+xlab("zipcode")+ylab("purchase price")
P2<- P2+ggtitle("Median and Mean Purchase Prices versus Zipcode")
P2<- P2+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
P2
require(plyr)   #require plyr
##use plyr to pull data into zipcode bundled stats
##some summary stats
purchase_stats<-ddply(delivery_data,~pickup_zipcode,
summarise,
mean_price=mean(purchase_price), ##calculate mean
median_price=median(purchase_price),
max_price=max(purchase_price))
##filter for complete cases
purchase_stats<-purchase_stats[!is.na(purchase_stats$pickup_zipcode),]
##plot
P2<- ggplot(purchase_stats, aes(x=factor(pickup_zipcode), y=median_price))
P2<- P2+geom_point(size=3.5, colour="blue", alpha=.8)
#P2<- P2+geom_point(aes(y=mean_price), alpha=0.5, size=3, shape=2)
P2<- P2+xlab("zipcode")+ylab("purchase price")
P2<- P2+ggtitle("Median and Mean Purchase Prices versus Zipcode")
P2<- P2+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
P2
require(plyr)   #require plyr
##use plyr to pull data into zipcode bundled stats
##some summary stats
purchase_stats<-ddply(delivery_data,~pickup_zipcode,
summarise,
mean_price=mean(purchase_price), ##calculate mean
median_price=median(purchase_price),
max_price=max(purchase_price))
##filter for complete cases
purchase_stats<-purchase_stats[!is.na(purchase_stats$pickup_zipcode),]
##plot
P2<- ggplot(purchase_stats, aes(x=factor(pickup_zipcode), y=median_price))
P2<- P2+geom_point(size=4, colour="blue", alpha=.8)
P2<- P2+geom_point(aes(y=mean_price), alpha=0.5, size=3, shape=2)
P2<- P2+xlab("zipcode")+ylab("purchase price")
P2<- P2+ggtitle("Median and Mean Purchase Prices versus Zipcode")
P2<- P2+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
P2
require(plyr)   #require plyr
##use plyr to pull data into zipcode bundled stats
##some summary stats
purchase_stats<-ddply(delivery_data2,~pickup_zipcode,
summarise,
mean_price=mean(purchase_price), ##calculate mean
median_price=median(purchase_price),
max_price=max(purchase_price))
##filter for complete cases
purchase_stats<-purchase_stats[!is.na(purchase_stats$pickup_zipcode),]
##plot
P2<- ggplot(purchase_stats, aes(x=factor(pickup_zipcode), y=median_price))
P2<- P2+geom_point(size=4, colour="blue", alpha=.8)
P2<- P2+geom_point(aes(y=mean_price), alpha=0.5, size=3, shape=2)
P2<- P2+xlab("zipcode")+ylab("purchase price")
P2<- P2+ggtitle("Median and Mean Purchase Prices versus Zipcode")
P2<- P2+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
P2
require(plyr)   #require plyr
##use plyr to pull data into zipcode bundled stats
##some summary stats
purchase_stats<-ddply(delivery_data2,~pickup_zipcode,
summarise,
mean_price=mean(purchase_price), ##calculate mean
median_price=median(purchase_price),
max_price=max(purchase_price))
##filter for complete cases
purchase_stats<-purchase_stats[!is.na(purchase_stats$pickup_zipcode),]
##plot
P2<- ggplot(purchase_stats, aes(x=factor(pickup_zipcode), y=median_price))
P2<- P2+geom_bar(colour="blue", alpha=.8)
P2<- P2+xlab("zipcode")+ylab("purchase price")
P2<- P2+ggtitle("Median and Mean Purchase Prices versus Zipcode")
P2<- P2+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
P2
require(plyr)   #require plyr
##use plyr to pull data into zipcode bundled stats
##some summary stats
purchase_stats<-ddply(delivery_data2,~pickup_zipcode,
summarise,
mean_price=mean(purchase_price), ##calculate mean
median_price=median(purchase_price),
max_price=max(purchase_price))
##filter for complete cases
purchase_stats<-purchase_stats[!is.na(purchase_stats$pickup_zipcode),]
##plot
P2<- ggplot(purchase_stats, aes(x=factor(pickup_zipcode), y=median_price))
P2<- P2+geom_bar(stat="identity",colour="blue", alpha=.8)
P2<- P2+xlab("zipcode")+ylab("purchase price")
P2<- P2+ggtitle("Median and Mean Purchase Prices versus Zipcode")
P2<- P2+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
P2
require(plyr)   #require plyr
##use plyr to pull data into zipcode bundled stats
##some summary stats
purchase_stats<-ddply(delivery_data2,~pickup_zipcode,
summarise,
mean_price=mean(purchase_price), ##calculate mean
median_price=median(purchase_price),
max_price=max(purchase_price))
##filter for complete cases
purchase_stats<-purchase_stats[!is.na(purchase_stats$pickup_zipcode),]
##plot
P2<- ggplot(purchase_stats, aes(x=factor(pickup_zipcode), y=median_price))
P2<- P2+geom_bar(stat="identity",colour="blue", alpha=.8, width=0.6)
P2<- P2+xlab("zipcode")+ylab("purchase price")
P2<- P2+ggtitle("Median and Mean Purchase Prices versus Zipcode")
P2<- P2+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
P2
require(plyr)   #require plyr
##use plyr to pull data into zipcode bundled stats
##some summary stats
purchase_stats<-ddply(delivery_data2,~pickup_zipcode,
summarise,
mean_price=mean(purchase_price), ##calculate mean
median_price=median(purchase_price),
max_price=max(purchase_price))
##filter for complete cases
purchase_stats<-purchase_stats[!is.na(purchase_stats$pickup_zipcode),]
##plot
P2<- ggplot(purchase_stats, aes(x=factor(pickup_zipcode), y=median_price))
P2<- P2+geom_bar(stat="identity",colour="blue", alpha=.6, width=0.6)
P2<- P2+xlab("zipcode")+ylab("purchase price")
P2<- P2+ggtitle("Median Purchase Prices versus Zipcode")
P2<- P2+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
P2
require(plyr)   #require plyr
##use plyr to pull data into zipcode bundled stats
##some summary stats
purchase_stats<-ddply(delivery_data2,~pickup_zipcode,
summarise,
mean_price=mean(purchase_price), ##calculate mean
median_price=median(purchase_price),
max_price=max(purchase_price))
##filter for complete cases
purchase_stats<-purchase_stats[!is.na(purchase_stats$pickup_zipcode),]
##plot
P2<- ggplot(purchase_stats, aes(x=factor(pickup_zipcode), y=median_price))
P2<- P2+geom_bar(stat="identity",colour="blue", alpha=.4, width=0.6)
P2<- P2+xlab("zipcode")+ylab("purchase price")
P2<- P2+ggtitle("Median Purchase Prices versus Zipcode")
P2<- P2+theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
P2
d<-delivery_data[delivery_data$pickup_zipcode == 94112]
d<-delivery_data[delivery_data$pickup_zipcode == 94112,]
dim(d)
d<-delivery_data[delivery_data$pickup_zipcode == 94122,]
dim(d)
e<-d[d$purchase_price<60.001,]
dim(e)
##This chunk gets the data and cleans it
delivery_data<-read.csv("delivery_data.csv")
##clean data
##data frame it
delivery_data<-as.data.frame(delivery_data)
#eliminate NA zipcodes
delivery_data<-delivery_data[!is.na(delivery_data$pickup_zipcode),]
##ensure purchase prices are finite
delivery_data<-delivery_data[!is.na(delivery_data$purchase_price),]
#delivery_data<-delivery_data[delivery_data$purchase_price>0,]
str(delivery_data) ##take a look at the structure
head(delivery_data[,c(1:2,5)])  ##look at the headers of just a few columns
d<-delivery_data[delivery_data$pickup_zipcode == 94122,]
dim(d)
e<-d[d$purchase_price<60.001,]
dim(e)
install.packages("twitteR")
require(twitteR)
twts<-userTimeline("@TripCheckUS20B", n=100)
## A real example, but using a fictitious consumerkey and consumer
## secret - you’ll need to supply your own
reqURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "http://api.twitter.com/oauth/access_token"
authURL <- "http://api.twitter.com/oauth/authorize"
consumerKey <- "7UddBUI2lFO6dIJuOplYuGSr4"
consumerSecret <- "UO50oEmKoIKP6LRBNrcs4LsPVekltKrDWQh6tMn7nQ9t5eB6SI"
twitCred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
twitCred$handshake()
## A real example, but using a fictitious consumerkey and consumer
## secret - you’ll need to supply your own
reqURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "http://api.twitter.com/oauth/access_token"
authURL <- "http://api.twitter.com/oauth/authorize"
consumerKey <- "7UddBUI2lFO6dIJuOplYuGSr4"
consumerSecret <- "UO50oEmKoIKP6LRBNrcs4LsPVekltKrDWQh6tMn7nQ9t5eB6SI"
twitCred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
twitCred$handshake("3629025")
registerTwitterOAuth(twitCred)
