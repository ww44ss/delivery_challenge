sa<-sd(after)
power.t.test(n = 5, delta = 2/4, sd = 1, type = "one.sample", alt = "one.sided")$power
?power.t.test
after
a<- t.test(before, after, paried=TRUE)
a
power.t.test(n = 5, delta = (mb-ma), sd = sd)$power
before<-c(140, 	138,150	,148,135)
after<-	c(132,135,151,146,130)
after
a<- t.test(before, after, paried=TRUE)
a
mb<-mean(before)
ma<-mean(after)
sb<-sd(before)
sa<-sd(after)
ssd <- mean(sb^2+sa^2)^(1/2)
power.t.test(n = 5, delta = (mb-ma), sd = ssd, alt = "one.sided")$power
power.t.test(n = 5, delta = (mb-ma), sd = sb, alt = "one.sided")$power
power.t.test(n = 5, delta = (mb-ma), sd = sb, alt = "two.sided")$power
power.t.test(n = 5, delta = (mb-ma), sd = sb, type="one.sample",alt = "two.sided")$power
power.t.test(n = 9, delta = 0, sd = 30,alt = "two.sided")$power
power.t.test(n = 9, power=.95, sd = 30,alt = "two.sided")$delta
delt<-power.t.test(n = 9, power=.95, sd = 30,alt = "two.sided")$delta
1100+c(-1,1)*delt
delt<-power.t.test(n = 9, power=.95, sd = 30,alt = "one.sided")$delta
1100+c(-1,1)*delt
delt<-power.t.test(n = 9, power=.05, sd = 30,alt = "one.sided")$delta
delt<-power.t.test(n = 9, power=.975, sd = 30,alt = "one.sided")$delta
1100+c(-1,1)*delt
power.t.test(n = 5, delta = 0, sd = sb,alt = "two.sided")$power
power.t.test(n = 5, delta = (ma-mb), sd = sb,alt = "two.sided")$power
a<- t.test(before, after, paried=TRUE)
a
t.test(y,mu=sb)
t.test(before,mu=sb)
t.test(before,after,mu=sb)
t.test(before,after,mu=sb, one.sided=FALSE)
t.test(before,after,n=4,mu=sb, one.sided=FALSE)
t.test(before,after,n=4,mu=sb, one.sided=FALSE)
t.test(before,after,mu=sb, one.sided=FALSE)
power.t.test(n = 5, delta = (ma-mb), sd = sb,alt = "two.sided")$power
t.test(before,after,mu=0, one.sided=FALSE)
power.t.test(n = 5, delta = 0, sd = sb,alt = "two.sided")$power
power.t.test(n = 5, delta = mb-ma, sd = sb,alt = "two.sided")$power
?pValues
delt<-power.t.test(n = 9, power=.975, sd = 30,alt = "one.sided")$delta
power.t.test(n = 5, delta = mb-ma, sd = sb/sqrt(length(before)),alt = "two.sided")$power
mb<-mean(before)
ma<-mean(after)
sb<-sd(before)
sa<-sd(after)
ss<-sqrt(mean(sb^2+sa^2))
n=length(before)
##form z score
z<- (after-before)/(ss/sqrt(n))
z
z<- (ma-mb)/(ss/sqrt(n))
z
2*(pnorm(-abs(z)))
mb<-mean(before)
ma<-mean(after)
sb<-sd(before)
sa<-sd(after)
sa
sb
ss<-sqrt(mean(sb^2+sa^2))
ss
n=length(before)
##form z score
z<- (ma-mb)/(ss/sqrt(n))
n=2*length(before)
##form z score
z<- (ma-mb)/(ss/sqrt(n))
z
2*(pnorm(-abs(z)))
mb-ma+c(-1,1)*1.645*sa/sqrt(n)
z<- (ma-mb)/(sa/sqrt(n))
z
qt(.975, 4)
a<-
a<- t.test(before-after)
a
t.test(before-after)$p-vaule
t.test(before-after)$p-value
x<-t.test(before-after)
str(x)
t.test(before-after)$p.value
delt<-1.645*30/8
1100+c(-1,1)*delt
?qnorm
qnorm(.975)
pnorm(.975)
qnorm(0.95)
delt<-1.645*30/sqrt(8)
1100+c(-1,1)*delt
delt<-1.6448*30/sqrt(8)
1100+c(-1,1)*delt
delt<-qnorm(.95)*30/sqrt(8)
1100+c(-1,1)*delt
delt<-qt(.95)*30/sqrt(8)
delt<-qt(.95, df=10)*30/sqrt(8)
1100+c(-1,1)*delt
delt<-qt(.95, df=5)*30/sqrt(8)
1100+c(-1,1)*delt
delt<-qt(.95, df=10)*30/sqrt(8)
1100+c(-1,1)*delt
delt<-qt(.95, df=9)*30/sqrt(8)
1100+c(-1,1)*delt
a<-c(1,1,1,0)
t.test(a)$p.value
r<-c(1,1,0,0)
t.test(a-r)$p.value
r<-c(1,0,1,0)
t.test(a-r)$p.value
pbinom(1,8)
?pbinom
pbinom(1,8,1/2)
pbinom(1,8,1/2, lower.tail=FALSE)
pbinom(6,8,1/2, lower.tail=FALSE)
pbinom(1,8,1/2, lower.tail=FALSE)
pbinom(c(1,2),8,1/2, lower.tail=FALSE)
pbinom(c(1,2,3,4),4,1/2, lower.tail=FALSE)
pbinom(c(0,1,2,3,4),4,1/2, lower.tail=FALSE)
pbinom(c(1,2,3,4),4,1/2, lower.tail=FALSE)
pbinom(c(1,2,3,4),4,1/2, lower.tail=TRUE)
r<-10/1787
ppois(r-1,1,lower.tail=FALSE)
r<-floor(10/1787)
r
r<-floor(100*10./1787)
r
r<-100*10./1787
r
ppois(r,1,lower.tail=FALSE)
r<-100*(10.-1)/1787
r
ppois(r,1,lower.tail=FALSE)
ppois(1,2)
ppois(2,4)
ppois(9,18,lower.tail=FALSE)
ppois(9,18,lower.tail=FALSE)
ppois(9,17.8,lower.tail=FALSE)
ppois(9,17,lower.tail=FALSE)
ppois(9,18,lower.tail=TRUE)
ppois(9,17.8,lower.tail=TRUE)
ppois(9,17,lower.tail=TRUE)
r<-100*(10.)/1787
ppois(10,17,lower.tail=TRUE)
ppois(10,18,lower.tail=TRUE)
ppois(10,18,lower.tail=TRUE)
at<- -3 #treatment average
ap<-1   #placebo
st<-1.5 #treatment sdev
sp<-1.8
nt<-9   #number treated
np<-9
sdev<-sqrt(mean(st^2+sp^2)/(np+nt-2))
sdev2<-sqrt( ((nt-1)st^2+(np-1)sp^2)/(np+nt-2))
sdev2<-sqrt( ((nt-1)*st^2+(np-1)*sp^2)/(np+nt-2))
sdev
sdev2
sdev<-sqrt(mean(st^2+sp^2))
sdev
sdev<-sqrt(mean(st^2+sp^2)/np)
sdev
sdev<-sqrt(mean(st^2+sp^2)/(np-1))
sdev
sdev<-sqrt(mean(st^2+sp^2)/(np+nt-2))
sdev<-sqrt(mean(c(st^2,sp^2))
sdev<-sqrt(mean(c(st^2,sp^2)))
sdev2<-sqrt( ((nt-1)*st^2+(np-1)*sp^2)/(np+nt-2))
sdev<-sqrt(mean(c(st^2,sp^2)))
sdev2<-sqrt( ((nt-1)*st^2+(np-1)*sp^2)/(np+nt-2))
sdev
sdev2
at-ap+c(-1,1)*qt(0.975, nt+np-1)*sdev(1/np+1/nt)^(1/2)
at-ap+c(-1,1)*qt(0.975, nt+np-1)*sdev*(1/np+1/nt)^(1/2)
ci<-at-ap+c(-1,1)*qt(0.975, nt+np-1)*sdev*(1/np+1/nt)^(1/2)
ci
head(delivery_data)
delivery_data<-read.csv("delivery_data.csv")
getwd()
setwd("delivery_challenge")
delivery_data<-read.csv("delivery_data.csv")
#if getwd()=="delivery_challenge" {} else {setwd("delivery_challenge")}
delivery_data<-read.csv("delivery_data.csv")
##clean data
##data frame it
delivery_data<-as.data.frame(delivery_data)
#eliminate NA zipcodes
delivery_data<-delivery_data[!is.na(delivery_data$pickup_zipcode),]
##ensure pruchase prices are finite
delivery_data<-delivery_data[!is.na(delivery_data$purchase_price),]
delivery_data<-delivery_data[delivery_data$purchase_price>0,]
##take a look at the structure and header of the data
str(delivery_data)
head(delivery_data)
#if getwd()=="delivery_challenge" {} else {setwd("delivery_challenge")}
delivery_data<-read.csv("delivery_data.csv")
##clean data
##data frame it
delivery_data<-as.data.frame(delivery_data)
#eliminate NA zipcodes
delivery_data<-delivery_data[!is.na(delivery_data$pickup_zipcode),]
##ensure pruchase prices are finite
delivery_data<-delivery_data[!is.na(delivery_data$purchase_price),]
delivery_data<-delivery_data[delivery_data$purchase_price>0,]
##take a look at the structure and header of the data
str(delivery_data)
head(delivery_data[,c(1:2,5)])
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,~pickup_zipcode,summarise,less_than_60=count(purchase_price <=60)),btw_60_and_120=count(purchace_price>60.0&&purchase_price <=120), above_120=count(purchase_price>120))
purchase_stats_mgt
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,~pickup_zipcode,summarise,less_than_60=count(purchase_price <=60)),btw_60_and_120=count(purchace_price>60.0&&purchase_price <=120), above_120=count(purchase_price>120))
purchase_stats_mgt
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,~pickup_zipcode,summarise,less_than_60=count(purchase_price <=60),btw_60_and_120=count(purchace_price>60.0&&purchase_price <=120), above_120=count(purchase_price>120))
purchase_stats_mgt
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,~pickup_zipcode,summarise,less_than_60=count(purchase_price <=60),btw_60_and_120=count(purchase_price>60.0&&purchase_price <=120), above_120=count(purchase_price>120))
purchase_stats_mgt
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,~pickup_zipcode,summarise,less_than_60=count(purchase_price <=60))#,btw_60_and_120=count(purchase_price>60.0&&purchase_price <=120), above_120=count(purchase_price>120))
purchase_stats_mgt
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,~pickup_zipcode,summarise,less_than_60=nrow(purchase_price <=60))#,btw_60_and_120=count(purchase_price>60.0&&purchase_price <=120), above_120=count(purchase_price>120))
purchase_stats_mgt
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,~pickup_zipcode,summarise,less_than_60=length(purchase_price[<60]))#,btw_60_and_120=count(purchase_price>60.0&&purchase_price <=120), above_120=count(purchase_price>120))
count = length(contact[relpos == 0 & maxpos > 1]
purchase_stats_mgt
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,~pickup_zipcode,summarise,less_than_60=length(purchase_price[<60]))#,btw_60_and_120=count(purchase_price>60.0&&purchase_price <=120), above_120=count(purchase_price>120))
#count = length(contact[relpos == 0 & maxpos > 1]
purchase_stats_mgt
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,~pickup_zipcode,summarise,less_than_60=length(purchase_price<60))#,btw_60_and_120=count(purchase_price>60.0&&purchase_price <=120), above_120=count(purchase_price>120))
#count = length(contact[relpos == 0 & maxpos > 1]
purchase_stats_mgt
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,~pickup_zipcode,summarise,less_than_60=length(purchase_price<=60)),btw_60_and_120==length(purchase_price>60&&purchase_price<120)), above_120==length(purchase_price>120))
#count = length(contact[relpos == 0 & maxpos > 1]
purchase_stats_mgt
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,~pickup_zipcode,summarise,less_than_60=length(purchase_price<=60)),btw_60_and_120=length(purchase_price>60&&purchase_price<120)), above_120=length(purchase_price>120))
#count = length(contact[relpos == 0 & maxpos > 1]
purchase_stats_mgt
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,~pickup_zipcode,summarise,less_than_60=length(purchase_price<=60),btw_60_and_120=length(purchase_price>60&&purchase_price<120)), above_120=length(purchase_price>120))
#count = length(contact[relpos == 0 & maxpos > 1]
purchase_stats_mgt
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,~pickup_zipcode,
summarise,
less_than_60=length(purchase_price<=60),
btw_60_and_120=length(purchase_price>60&&purchase_price<120),
above_120=length(purchase_price>120))
#count = length(contact[relpos == 0 & maxpos > 1]
purchase_stats_mgt
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,~pickup_zipcode,
summarise,
less_than_60=length(purchase_price[<=60]),
btw_60_and_120=length(purchase_price[>60&&purchase_price<120]),
above_120=length(purchase_price[>120]))
#count = length(contact[relpos == 0 & maxpos > 1]
purchase_stats_mgt
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,~pickup_zipcode,
summarise,
less_than_60=length(purchase_price<=60),
btw_60_and_120=length(purchase_price>60&&purchase_price<120),
above_120=length(purchase_price==1))
#count = length(contact[relpos == 0 & maxpos > 1]
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,~pickup_zipcode,
summarise,
less_than_60=length(purchase_price<=60),
btw_60_and_120=length(purchase_price>60&&purchase_price<120),
above_120=length(purchase_price>120))
#count = length(contact[relpos == 0 & maxpos > 1]
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,~pickup_zipcode,
summarise,
less_than_60=length(purchase_price[<60]),
btw_60_and_120=length(purchase_price[>60&<120]),
above_120=length(purchase_price[>120]))
#count = length(contact[relpos == 0 & maxpos > 1]
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,~pickup_zipcode,
summarise,
less_than_60=length(purchase_price[<60,]),
btw_60_and_120=length(purchase_price[>60&<120,]),
above_120=length(purchase_price[>120,]))
#count = length(contact[relpos == 0 & maxpos > 1]
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,~pickup_zipcode,
summarise,
less_than_60=length(purchase_price),
btw_60_and_120=length(purchase_price),
above_120=length(purchase_price))
#count = length(contact[relpos == 0 & maxpos > 1]
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,~pickup_zipcode,
summarise,
less_than_60=length(purchase_price),
btw_60_and_120=length(purchase_price),
above_120=length(purchase_price))
#count = length(contact[relpos == 0 & maxpos > 1]
purchase_stats_mgt
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,~pickup_zipcode,
summarise,
less_than_60=length(purchase_price<20),
btw_60_and_120=length(purchase_price),
above_120=length(purchase_price))
#count = length(contact[relpos == 0 & maxpos > 1]
purchase_stats_mgt
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,~pickup_zipcode,
summarise,
less_than_60=length(pickup_zipcode[purchase_price<20]),
btw_60_and_120=length(pickup_zipcode[purchase_price>20&<120]),
above_120=length(pickup_zipcode[purchase_price>120]))
#count = length(contact[relpos == 0 & maxpos > 1]
purchase_stats_mgt
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,~pickup_zipcode,
summarise,
less_than_60=length(pickup_zipcode[purchase_price <=20 ]),
btw_60_and_120=length(pickup_zipcode[purchase_price >20 & <120]),
above_120=length(pickup_zipcode[purchase_price > 120]))
#count = length(contact[relpos == 0 & maxpos > 1]
purchase_stats_mgt
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,"pickup_zipcode",
summarise,
less_than_60=length(pickup_zipcode[purchase_price <=20]),
btw_60_and_120=length(pickup_zipcode[purchase_price >20 & <120]),
above_120=length(pickup_zipcode[purchase_price > 120]))
#count = length(contact[relpos == 0 & maxpos > 1]
purchase_stats_mgt
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,c("pickup_zipcode","purchase_price"),
summarise,
less_than_60=length(pickup_zipcode[purchase_price <=20]),
btw_60_and_120=length(pickup_zipcode[purchase_price >20 & <120]),
above_120=length(pickup_zipcode[purchase_price > 120]))
#count = length(contact[relpos == 0 & maxpos > 1]
purchase_stats_mgt
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,c("pickup_zipcode","purchase_price"),
summarise,
less_than_60=length(purchase_price<=20),
btw_60_and_120=length(pickup_zipcode[purchase_price >20 & <120]),
above_120=length(pickup_zipcode[purchase_price > 120]))
#count = length(contact[relpos == 0 & maxpos > 1]
purchase_stats_mgt
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,c("pickup_zipcode","purchase_price"),
summarise,
less_than_60=length(purchase_price<=20),
btw_60_and_120=length(purchase_price >20 & <120),
above_120=length(purchase_price > 120))
#count = length(contact[relpos == 0 & maxpos > 1]
purchase_stats_mgt
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,c("pickup_zipcode","purchase_price"),
summarise,
less_than_60=length(purchase_price[puchase_price<20]),
btw_60_and_120=length(purchase_price >20 & <120),
above_120=length(purchase_price > 120))
#count = length(contact[relpos == 0 & maxpos > 1]
purchase_stats_mgt
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,c("pickup_zipcode","purchase_price"),
summarise,
less_than_60=length(purchase_price[puchase_price<20]),
btw_60_and_120=length(purchase_price[purchase_price>20 & purchase_price<120]),
above_120=length(purchase_price[purchase_price > 120]))
#count = length(contact[relpos == 0 & maxpos > 1]
purchase_stats_mgt
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,c("pickup_zipcode","purchase_price"),
summarise,
less_than_60=length(purchase_price[purchase_price<20]),
btw_60_and_120=length(purchase_price[purchase_price>20 & purchase_price<120]),
above_120=length(purchase_price[purchase_price > 120]))
#count = length(contact[relpos == 0 & maxpos > 1]
purchase_stats_mgt
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,c("pickup_zipcode","purchase_price"),
summarise,
less_than_60=length(purchase_price[purchase_price<20]),
btw_60_and_120=length(purchase_price[purchase_price>20 & purchase_price<120]),
above_120=length(purchase_price[purchase_price > 120]))
#count = length(contact[relpos == 0 & maxpos > 1]
purchase_stats_mgt
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,"pickup_zipcode"),
summarise,
less_than_60=length(purchase_price[purchase_price<20]),
btw_60_and_120=length(purchase_price[purchase_price>20 & purchase_price<120]),
above_120=length(purchase_price[purchase_price > 120]))
#count = length(contact[relpos == 0 & maxpos > 1]
purchase_stats_mgt
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,"pickup_zipcode"),
summarise,
less_than_60=length(purchase_price[purchase_price<20]),
btw_60_and_120=length(purchase_price[purchase_price>20 & purchase_price<120]),
above_120=length(purchase_price[purchase_price > 120]))
#count = length(contact[relpos == 0 & maxpos > 1]
purchase_stats_mgt[1:10,]
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,"pickup_zipcode"),
summarise,
less_than_60=length(pickup_zipcode[purchase_price<20]),
btw_60_and_120=length(purchase_price[purchase_price>20 & purchase_price<120]),
above_120=length(purchase_price[purchase_price > 120]))
#count = length(contact[relpos == 0 & maxpos > 1]
purchase_stats_mgt[1:10,]
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,"pickup_zipcode",
summarise,
less_than_60=length(pickup_zipcode[purchase_price<20]),
btw_60_and_120=length(purchase_price[purchase_price>20 & purchase_price<120]),
above_120=length(purchase_price[purchase_price > 120]))
#count = length(contact[relpos == 0 & maxpos > 1]
purchase_stats_mgt[1:10,]
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,"pickup_zipcode",
summarise,
less_than_60=length(puchase_price[purchase_price<20]),
btw_60_and_120=length(purchase_price[purchase_price>20 & purchase_price<120]),
above_120=length(purchase_price[purchase_price > 120]))
#count = length(contact[relpos == 0 & maxpos > 1]
purchase_stats_mgt[1:10,]
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,"pickup_zipcode",
summarise,
less_than_60=length(puchase_price[purchase_price<20]),
btw_60_and_120=length(purchase_price[purchase_price>20 & purchase_price<120]),
above_120=length(purchase_price[purchase_price > 120]))
#count = length(contact[relpos == 0 & maxpos > 1]
purchase_stats_mgt
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,"pickup_zipcode",
summarise,
less_than_60=length(puchase_price[purchase_price<=20]),  ##select purchase price
btw_60_and_120=length(purchase_price[purchase_price>20 & purchase_price<=120]),
above_120=length(purchase_price[purchase_price > 120]))
#count = length(contact[relpos == 0 & maxpos > 1]
purchase_stats_mgt
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,"pickup_zipcode",
summarise,
less_than_60=length(purchase_price[purchase_price<=20]),  ##select purchase price
btw_60_and_120=length(purchase_price[purchase_price>20 & purchase_price<=120]),
above_120=length(purchase_price[purchase_price > 120]))
#count = length(contact[relpos == 0 & maxpos > 1]
purchase_stats_mgt
require(plyr)   ##get plyr library
##Pull data apart for management table
purchase_stats_mgt<-ddply(delivery_data,"pickup_zipcode",
summarise,
less_than_60=length(purchase_price[purchase_price<=60]),  ##select purchase price
btw_60_and_120=length(purchase_price[purchase_price>60 & purchase_price<=120]),
above_120=length(purchase_price[purchase_price > 120]))
#count = length(contact[relpos == 0 & maxpos > 1]
purchase_stats_mgt
